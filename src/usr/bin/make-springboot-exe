#!/bin/bash
#    make-springboot-exe - create Linux RPM packages based on Spring Boot applications
#
#    Copyright (C) hdsdi3g for hd3g.tv 2022
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or any
#    later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program. If not, see <https://www.gnu.org/licenses/>.
#
#    Usage: make-springboot-exe <SpringBoot project path> [<destination directory to put exe file>]
#
#    with export SKIP_IMPORT_POM=1 for skip to compute full pom XML file if a temp version exists
#    with export SKIP_BUILD=1 for skip maven build if the expected jar exists.
#    with export SKIP_NPM=1 for skip npm builds.
#    with export SKIP_CLEAN=1 for skip clean temp files/directories after build.
#    with export SKIP_MAKE=1 for skip to make EXE file, just let ready to build.
#    with export PREFIX=/somewhere to chroot the app files search
#
#    shellcheck disable=SC1091

set -eu

PREFIX="${PREFIX:-"/"}";
INCLUDE_DIR="$PREFIX/usr/lib/linux-springboot-packager/include";

# SEARCH SCRIPT FILES
if [ ! -d "$INCLUDE_DIR" ]; then
    # /xxx/src/usr/bin/make-springboot-exe > /xxx/src
    PREFIX="$(realpath "$0" | xargs dirname | xargs dirname | xargs dirname)";
    INCLUDE_DIR="$PREFIX/usr/lib/linux-springboot-packager/include";
    if [ ! -d "$INCLUDE_DIR" ]; then
        echo "Can't found script files. Please setup PREFIX env var." >&2;
        exit 7;
    fi
fi

# LOAD BUILD DEPS
. "$INCLUDE_DIR/consts.bash"
. "$INCLUDE_DIR/checktools.bash"
. "$INCLUDE_DIR/project.bash"

# CHECK PARAM PRESENCE
if [ "$#" -eq 0 ]; then
    echo "Usage $0 <SpringBoot project path>" >&2;
    echo "The SpringBoot project path must be a Maven project (with pom.xml on root)" >&2;
    exit "$EXIT_CODE_MISSING_PROJECT";
fi

# CHECK TOOL PRESENCE
check_mktemp;
check_maven;
check_realpath;
check_basename;
check_makensis;
check_pandoc;
check_xmlstarlet;

check_destination_dir "$@";
project_load_base_dir "$1";
make_front;
load_mvn_vars;
def_windows_base_dir_vars;
def_files_dir_vars;
prepare_exe_build_dir;
make_jar;

extract_default_app_conf;
sed -i $'s/$/\r/' "$BUILD_DIR/$OUTPUT_APPCONF_FILE";

extract_information_files;
if [ -f "$BUILD_DIR/$OUTPUT_LICENCE_FILE" ]; then
    sed -i $'s/$/\r/' "$BUILD_DIR/$OUTPUT_LICENCE_FILE";
fi
if [ -f "$BUILD_DIR/$OUTPUT_THIRDPARTY_FILE" ]; then
    sed -i $'s/$/\r/' "$BUILD_DIR/$OUTPUT_THIRDPARTY_FILE";
fi

make_replace_list_vars;
extract_default_windows_log_conf;
# make_html_doc_page; only for linux systemd...
make_winsw_conf;
make_nsi_conf "$(bash "$PREFIX/usr/bin/search-winsw.bash")";

if [ "${SKIP_MAKE:-"0"}" = "0" ]; then
    OUT_EXE_FILE="$BUILD_DESTINATION_DIR/$ARTIFACTID-v$VERSION-setup.exe";
    if [ -f "$OUT_EXE_FILE" ]; then
        rm -f "$OUT_EXE_FILE";
    fi
    
    makensis \
        -DBUILD_DIR="$BUILD_DIR" \
        -DOUTPUT_DIR_APP="$OUTPUT_DIR_APP" \
        -DOUTPUT_DIR_USER="$OUTPUT_DIR_USER" \
        -INPUTCHARSET UTF8 -WX \
        "$BUILD_DIR/$OUTPUT_NSI_FILE"

    TEMP_OUT_EXE_FILE="$BUILD_DIR/$ARTIFACTID-v$VERSION-setup.exe";
    if [ ! -f "$TEMP_OUT_EXE_FILE" ]; then
        echo "Can't found exe file, expect: $TEMP_OUT_EXE_FILE" >&2;
        exit "$EXIT_CODE_CANT_FOUND_RPM_FILE_OUTPUT";
    fi
    mv "$TEMP_OUT_EXE_FILE" "$OUT_EXE_FILE";
    clean_after_build "$EXE_WORKING_DIR";

    echo "";
    echo "Now, you can use $OUT_EXE_FILE on a Windows host."
else
    echo "You will found the nsi file to $BUILD_DIR/$OUTPUT_NSI_FILE";
    echo "Free feel to edit it, and build with makensis.";
fi
